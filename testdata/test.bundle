{
  "mediaType": "application/vnd.dev.sigstore.bundle.v0.3+json",
  "verificationMaterial": {
    "x509CertificateChain": {
      "certificates": [
        {
          "rawBytes": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwVENDQWxtZ0F3SUJBZ0lVVnZGVEQ1RUxLOStRYnZkMndyNzVhdHVGb1VVd0NnWUlLb1pJemowRUF3TXcKTnpFVk1CTUdBMVVFQ2hNTWMybG5jM1J2Y21VdVpHVjJNUjR3SEFZRFZRUURFeFZ6YVdkemRHOXlaUzFwYm5SbApjbTFsWkdsaGRHVXdIaGNOTWpVd01qQXhNVE0xTnpFeldoY05NalV3TWpBeE1UUXdOekV6V2pBQU1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmMUVZNXlnK0VVRUdyVXBvdmRwRWNMSXVaWEFncERrN1pndm4KUlFhR3BKdUxVTnlQc0JwTExuWk4yYWNCVFViaGM0bkwzbnB1eTE2TzlxS3pxd2U0dDZPQ0FYZ3dnZ0YwTUE0RwpBMVVkRHdFQi93UUVBd0lIZ0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREF6QWRCZ05WSFE0RUZnUVVXMTZxClM3aFArdUFOUGRBNzZXbFZveFRGUVVBd0h3WURWUjBqQkJnd0ZvQVUzOVBwejFZa0VaYjVxTmpwS0ZXaXhpNFkKWkQ4d0tBWURWUjBSQVFIL0JCNHdISUVhWVdSdmJHWnZMbWRoY21OcFlVQjFjMlZ5ZG1WeWN5NXVaWFF3S1FZSwpLd1lCQkFHRHZ6QUJBUVFiYUhSMGNITTZMeTloWTJOdmRXNTBjeTVuYjI5bmJHVXVZMjl0TUNzR0Npc0dBUVFCCmc3OHdBUWdFSFF3YmFIUjBjSE02THk5aFkyTnZkVzUwY3k1bmIyOW5iR1V1WTI5dE1JR0tCZ29yQmdFRUFkWjUKQWdRQ0JId0VlZ0I0QUhZQTNUMHdhc2JIRVRKakdSNGNtV2MzQXFKS1hyamVQSzMvaDRweWdDOHA3bzRBQUFHVQp3YzBoL2dBQUJBTUFSekJGQWlCb3p6WHJGd2hjeDdvK3lSMTRpT1cvMk5ldElSVXRjL3NzcEtnaEVZcTlZQUloCkFLQVp6OUx0dmZFOGZjTXJXV1ZrWWFrTG4yRXZYeVRPaVgybS9SVkROMnlYTUFvR0NDcUdTTTQ5QkFNREEyWUEKTUdNQ01FTGVxNXJmMHdXZDlSbktmc3ZWYlRtL3A4K1FiYmlLRGx3TXRZaHh6czh2cXhTWFdzcHVsTXZJQyswMApuMEFHOVFJdlZaV2g1aSsyV0VRb0RSSVB4MTlCTlphMi9lamgwdU8vQXRpenhPTEcyUHpwWi93OHlkSDJ3cGdMClR4QlByNGM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        },
        {
          "rawBytes": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNHakNDQWFHZ0F3SUJBZ0lVQUxuVmlWZm5VMGJySmFzbVJrSHJuL1VuZmFRd0NnWUlLb1pJemowRUF3TXcKS2pFVk1CTUdBMVVFQ2hNTWMybG5jM1J2Y21VdVpHVjJNUkV3RHdZRFZRUURFd2h6YVdkemRHOXlaVEFlRncweQpNakEwTVRNeU1EQTJNVFZhRncwek1URXdNRFV4TXpVMk5UaGFNRGN4RlRBVEJnTlZCQW9UREhOcFozTjBiM0psCkxtUmxkakVlTUJ3R0ExVUVBeE1WYzJsbmMzUnZjbVV0YVc1MFpYSnRaV1JwWVhSbE1IWXdFQVlIS29aSXpqMEMKQVFZRks0RUVBQ0lEWWdBRThSVlMveXNIK05PdnVEWnlQSVp0aWxnVUY5TmxhcllwQWQ5SFAxdkJCSDFVNUNWNwo3TFNTN3MwWmlING5FN0h2N3B0UzZMdnZSL1NUazc5OExWZ016TGxKNEhlSWZGM3RIU2FleExjWXBTQVNyMWtTCjBOL1JnQkp6LzlqV0NpWG5vM3N3ZVRBT0JnTlZIUThCQWY4RUJBTUNBUVl3RXdZRFZSMGxCQXd3Q2dZSUt3WUIKQlFVSEF3TXdFZ1lEVlIwVEFRSC9CQWd3QmdFQi93SUJBREFkQmdOVkhRNEVGZ1FVMzlQcHoxWWtFWmI1cU5qcApLRldpeGk0WVpEOHdId1lEVlIwakJCZ3dGb0FVV01BZVg1RkZwV2FwZXN5UW9aTWkwQ3JGeGZvd0NnWUlLb1pJCnpqMEVBd01EWndBd1pBSXdQQ3NRSzREWWlaWURQSWFEaTVIRktuZnhYeDZBU1NWbUVSZnN5bllCaVgyWDZTSlIKblpVODQvOURaZG5GdnZ4bUFqQk90NlFwQmxjNEovMER4dmtUQ3FwY2x2emlMNkJDQ1BuamRsSUIzUHUzQnhzUApteWdVWTdJaTJ6YmRDZGxpaW93PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCOXpDQ0FYeWdBd0lCQWdJVUFMWk5BUEZkeEhQd2plRGxvRHd5WUNoQU8vNHdDZ1lJS29aSXpqMEVBd013CktqRVZNQk1HQTFVRUNoTU1jMmxuYzNSdmNtVXVaR1YyTVJFd0R3WURWUVFERXdoemFXZHpkRzl5WlRBZUZ3MHkKTVRFd01EY3hNelUyTlRsYUZ3MHpNVEV3TURVeE16VTJOVGhhTUNveEZUQVRCZ05WQkFvVERITnBaM04wYjNKbApMbVJsZGpFUk1BOEdBMVVFQXhNSWMybG5jM1J2Y21Vd2RqQVFCZ2NxaGtqT1BRSUJCZ1VyZ1FRQUlnTmlBQVQ3ClhlRlQ0cmIzUFFHd1M0SWFqdExrMy9PbG5wZ2FuZ2FCY2xZcHNZQnI1aSs0eW5CMDdjZWIzTFAwT0lPWmR4ZXgKWDY5YzVpVnV5SlJRK0h6MDV5aStVRjN1QldBbEhwaVM1c2gwK0gyR0hFN1NYcmsxRUM1bTFUcjE5TDlnZzkyagpZekJoTUE0R0ExVWREd0VCL3dRRUF3SUJCakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlJZCndCNWZrVVdsWnFsNnpKQ2hreUxRS3NYRitqQWZCZ05WSFNNRUdEQVdnQlJZd0I1ZmtVV2xacWw2ekpDaGt5TFEKS3NYRitqQUtCZ2dxaGtqT1BRUURBd05wQURCbUFqRUFqMW5IZVhacCsxM05XQk5hK0VEc0RQOEcxV1dnMXRDTQpXUC9XSFBxcGFWbzBqaHN3ZU5GWmdTczBlRTd3WUk0cUFqRUEyV0I5b3Q5OHNJa29GM3ZaWWRkMy9WdFdCNWI5ClROTWVhN0l4L3N0SjVUZmNMTGVBQkxFNEJOSk9zUTR2bkJISgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t"
        }
      ]
    },
    "tlogEntries": [
      {
        "logIndex": "167829132",
        "logId": {
          "keyId": "YzBkMjNkNmFkNDA2OTczZjk1NTlmM2JhMmQxY2EwMWY4NDE0N2Q4ZmZjNWI4NDQ1YzIyNGY5OGI5NTkxODAxZA=="
        },
        "kindVersion": {
          "kind": "dsse",
          "version": "0.0.1"
        },
        "integratedTime": "1738418234",
        "inclusionPromise": {
          "signedEntryTimestamp": "MEQCIFjYdYVTzEdj8IBjZLPMTMuG/LPswC7WsMtg+OXye/YuAiBl8CXXKZoNA/HzrG+Qd3f5d5kQlHKEYsdAZphH5XeMpg=="
        },
        "inclusionProof": {
          "logIndex": "45924870",
          "rootHash": "ZmY3MWFjZDU4NGZiNGIyMjIzMjQxNmE0ZGEwY2ExN2MzNGYyNTNlMDIyMWE4ZmI0YjBkYTUxZWEzMGY3MjMwMg==",
          "treeSize": "45924871",
          "hashes": [
            "MTI0NzZmZWIxYTYyOWY2ZmY3MjlhY2RlMjRkYzBlNzFmNjU1MDA1YzFkZjExMTEyYzBkNzY1MGMwNGEyZWIyNQ==",
            "NmJjMjFiNjU5OWIzZGFlNmFiZDljZDA1YzhmZjMwMzJlZjFkNGYzZjJjMjcxYjg0YmRiZGNkYTQzMTA1YjQ0Yg==",
            "NTFmMDMyNTQ5OTZmYjE4NDYzNWNkYmM2MzdjNGQ1ZTlhMDQyMDc0YWNmOTU1NTEzYzlkYTM2ZDg4ZjA5NjVhZg==",
            "ZGRiNDg3YTYwNWM0MWVkMWNmNzFiOTcxNzIyYmNjOTQyMWE3NzRkZDNiOGJmN2RmMzkwYTk2ZTUxODRkNDEzMw==",
            "NGUwMWUyMmFmZDRmMWYwNjA4MjAyYTcyYjc4OTI1MzQwNDBhZDhmOWU3MWE3NGFmMGNkMTY1ZWFmMmExYTc5Yg==",
            "ODA5MTYyNzk3ZTljYTAwODMyNzhlNGNlNGIzOTJkNGMwMDE5NDdiNjU1ZTNmZjZkNTlmYmZmNzlkM2MxOGU3NQ==",
            "OTAyNTdkOGEwOGU5YjJiZTg1MGUxZjQ4MWI4YjYzNDM0YjcyN2FhODg2OTdiMmZjMDZjMDExN2M1NGI4OTQ3YQ==",
            "YWEwOTRlODAwYTk0YTc4YTNiZjM1ZjFhMTMzMTkxZTdiZjNhYWFkZjU2OTg1MWViZWIwZTZhMTkyOTFkYzU2Mw==",
            "NTk4MGIyYzY0OWI3OWNiYjhkZThjYjliMDYyMTg2NjNkNjc5NGViY2JmMzM4ODI1ODg3MjRhZWQ1MzI4ZWQ1ZQ==",
            "OGQ0ZjdlYjYwOGQzMjBhNTE4MTllNTNiNGZiNDYzYWIyMmZlMTdlODA1NTdkYjQyNzcwNWY2MTk5ZDU0YjUwYg==",
            "YmRlOWIyNjhjOGY0MzVhZDRiMzIzNmMxZmZkMGU2OTJhZjEzZmEzMDFiZGU4ZmIyMDg0NGEwMDFhYzk0MDAxNQ=="
          ],
          "checkpoint": {
            "envelope": "rekor.sigstore.dev - 1193050959916656506\n45924871\n/3Gs1YT7SyIjJBak2gyhfDTyU+AiGo+0sNpR6jD3IwI=\n\nâ€” rekor.sigstore.dev wNI9ajBGAiEAurB7OH/qxKiUxJJ/YgjpQdv1f27/jGrV81bc0jgc6csCIQDFTz3tnbOVnD0kJUDO9lSNwWGGYEK73QNc0eR2ZVvUGg==\n"
          }
        },
        "canonicalizedBody": "eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiZHNzZSIsInNwZWMiOnsiZW52ZWxvcGVIYXNoIjp7ImFsZ29yaXRobSI6InNoYTI1NiIsInZhbHVlIjoiOWVmMGY2YWQyNTVmOTUxM2Y4M2MyN2NkOTRiMmI0YTU4MmU1MTYzNDliZmY3OTBhNDI1ZTVkMTM2NzIwZGZhOCJ9LCJwYXlsb2FkSGFzaCI6eyJhbGdvcml0aG0iOiJzaGEyNTYiLCJ2YWx1ZSI6IjYxNGE4MjMyMmY0ZDU3OGVjZDg0NTM2NWFlNGFhYmY5NTEzNmVkMmEwNjVhNDRjMTAwYWI5MWU4NzY3YTg5NjYifSwic2lnbmF0dXJlcyI6W3sic2lnbmF0dXJlIjoiTUVZQ0lRQ0xWdnA1VkNVRXBNYlFsNVArV0F2M255cjhPMFdPV0hQaHFabm82RllZMUFJaEFMdkN0SFMzZXdPdlFaTE9SVDc5OFJFTzdhYzE0cVFUOTlOQm56R1hDRnJTIiwidmVyaWZpZXIiOiJMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNd1ZFTkRRV3h0WjBGM1NVSkJaMGxWVm5aR1ZFUTFSVXhMT1N0UlluWmtNbmR5TnpWaGRIVkdiMVZWZDBObldVbExiMXBKZW1vd1JVRjNUWGNLVG5wRlZrMUNUVWRCTVZWRlEyaE5UV015Ykc1ak0xSjJZMjFWZFZwSFZqSk5ValIzU0VGWlJGWlJVVVJGZUZaNllWZGtlbVJIT1hsYVV6RndZbTVTYkFwamJURnNXa2RzYUdSSFZYZElhR05PVFdwVmQwMXFRWGhOVkUweFRucEZlbGRvWTA1TmFsVjNUV3BCZUUxVVVYZE9la1Y2VjJwQlFVMUdhM2RGZDFsSUNrdHZXa2w2YWpCRFFWRlpTVXR2V2tsNmFqQkVRVkZqUkZGblFVVm1NVVZaTlhsbkswVlZSVWR5VlhCdmRtUndSV05NU1hWYVdFRm5jRVJyTjFwbmRtNEtVbEZoUjNCS2RVeFZUbmxRYzBKd1RFeHVXazR5WVdOQ1ZGVmlhR00wYmt3emJuQjFlVEUyVHpseFMzcHhkMlUwZERaUFEwRllaM2RuWjBZd1RVRTBSd3BCTVZWa1JIZEZRaTkzVVVWQmQwbElaMFJCVkVKblRsWklVMVZGUkVSQlMwSm5aM0pDWjBWR1FsRmpSRUY2UVdSQ1owNVdTRkUwUlVablVWVlhNVFp4Q2xNM2FGQXJkVUZPVUdSQk56WlhiRlp2ZUZSR1VWVkJkMGgzV1VSV1VqQnFRa0puZDBadlFWVXpPVkJ3ZWpGWmEwVmFZalZ4VG1wd1MwWlhhWGhwTkZrS1drUTRkMHRCV1VSV1VqQlNRVkZJTDBKQ05IZElTVVZoV1ZkU2RtSkhXblpNYldSb1kyMU9jRmxWUWpGak1sWjVaRzFXZVdONU5YVmFXRkYzUzFGWlN3cExkMWxDUWtGSFJIWjZRVUpCVVZGaVlVaFNNR05JVFRaTWVUbG9XVEpPZG1SWE5UQmplVFZ1WWpJNWJtSkhWWFZaTWpsMFRVTnpSME5wYzBkQlVWRkNDbWMzT0hkQlVXZEZTRkYzWW1GSVVqQmpTRTAyVEhrNWFGa3lUblprVnpVd1kzazFibUl5T1c1aVIxVjFXVEk1ZEUxSlIwdENaMjl5UW1kRlJVRmtXalVLUVdkUlEwSklkMFZsWjBJMFFVaFpRVE5VTUhkaGMySklSVlJLYWtkU05HTnRWMk16UVhGS1MxaHlhbVZRU3pNdmFEUndlV2RET0hBM2J6UkJRVUZIVlFwM1l6Qm9MMmRCUVVKQlRVRlNla0pHUVdsQ2IzcDZXSEpHZDJoamVEZHZLM2xTTVRScFQxY3ZNazVsZEVsU1ZYUmpMM056Y0V0bmFFVlpjVGxaUVVsb0NrRkxRVnA2T1V4MGRtWkZPR1pqVFhKWFYxWnJXV0ZyVEc0eVJYWlllVlJQYVZneWJTOVNWa1JPTW5sWVRVRnZSME5EY1VkVFRUUTVRa0ZOUkVFeVdVRUtUVWROUTAxRlRHVnhOWEptTUhkWFpEbFNia3RtYzNaV1lsUnRMM0E0SzFGaVltbExSR3gzVFhSWmFIaDZjemgyY1hoVFdGZHpjSFZzVFhaSlF5c3dNQXB1TUVGSE9WRkpkbFphVjJnMWFTc3lWMFZSYjBSU1NWQjRNVGxDVGxwaE1pOWxhbWd3ZFU4dlFYUnBlbmhQVEVjeVVIcHdXaTkzT0hsa1NESjNjR2RNQ2xSNFFsQnlOR005Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLIn1dfX0="
      }
    ],
    "timestampVerificationData": {}
  },
  "dsseEnvelope": {
    "payload": "",
    "payloadType": "application/vnd.in-toto+json",
    "signatures": [
      {
        "sig": "TUVZQ0lRQ0xWdnA1VkNVRXBNYlFsNVArV0F2M255cjhPMFdPV0hQaHFabm82RllZMUFJaEFMdkN0SFMzZXdPdlFaTE9SVDc5OFJFTzdhYzE0cVFUOTlOQm56R1hDRnJT"
      }
    ]
  }
}
